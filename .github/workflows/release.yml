name: Auto Release from version.txt

on:
  push:
    branches:
      - main
    paths:
      - version.txt

jobs:
  release:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Read version from version.txt
        id: get_version
        run: |
          VERSION=$(cat version.txt | tr -d '\n')
          echo "VERSION=$VERSION" >> $GITHUB_ENV
          echo "version=$VERSION" >> $GITHUB_OUTPUT

      - name: Configure Git identity
        run: |
          git config user.name "github-actions"
          git config user.email "github-actions@github.com"

      - name: Debug local and remote tags
        run: |
          echo "Local tags:"
          git tag
          echo "Remote tags:"
          git ls-remote --tags origin || true

      - name: Create and push Git tag (only if it doesn't exist)
        run: |
          echo "Checking if tag '${{ env.VERSION }}' exists remotely..."
          if git ls-remote --tags origin | grep "refs/tags/${{ env.VERSION }}" >/dev/null; then
            echo "Tag '${{ env.VERSION }}' already exists on remote. Skipping tag creation."
          else
            echo "Creating and pushing tag '${{ env.VERSION }}'"
            git tag ${{ env.VERSION }}
            git push origin ${{ env.VERSION }}
          fi
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Create GitHub Release
        uses: softprops/action-gh-release@v2
        with:
          tag_name: ${{ env.VERSION }}
          name: Release ${{ env.VERSION }}
          body: |
            Automated release for data version `${{ env.VERSION }}`
          draft: false
          prerelease: false
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Upload processed data to GitHub Release
        uses: softprops/action-gh-release@v2
        with:
          tag_name: ${{ env.VERSION }}
          files: data/processed/*
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
